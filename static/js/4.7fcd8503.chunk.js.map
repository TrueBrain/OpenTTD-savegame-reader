{"version":3,"sources":["Savegame.tsx","Viewer.tsx","App.tsx"],"names":["Savegame","props","isAnalyzing","setIsAnalyzing","useState","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","buffer","result","ArrayBuffer","Promise","resolve","reject","setTimeout","res","decompress","Uint8Array","setData","JSON","parse","readAsArrayBuffer","getRootProps","getInputProps","isDragActive","useDropzone","_jsx","className","concat","children","_jsxs","Viewer","JSONTree","data","Main","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"oKAkDeA,MA9Cf,SAAkBC,GAChB,MAAOC,EAAaC,GAAkBC,oBAAS,GAEzCC,EAASC,uBAAaC,IAC1BA,EAAcC,SAASC,IACrB,MAAMC,EAAS,IAAIC,WAEnBD,EAAOE,QAAU,IAAMC,QAAQC,IAAI,4BACnCJ,EAAOK,QAAU,IAAMF,QAAQC,IAAI,2BACnCJ,EAAOM,OAAS,KACd,MAAMC,EAASP,EAAOQ,OACtB,GAAe,OAAXD,KAAqBA,aAAkBE,aAAc,OAEzDhB,GAAe,GASf,OARsB,IAAIiB,SAAQ,CAACC,EAASC,KAE1CC,YAAW,KACT,IAAIC,EAAMC,qBAAW,IAAIC,WAAWT,IACpChB,EAAM0B,QAAQC,KAAKC,MAAML,IACzBrB,GAAe,EAAM,GACpB,GAAG,GAEY,EAEtBO,EAAOoB,kBAAkBrB,EAAK,GAC9B,GAED,CAACR,KACE,aAAE8B,EAAY,cAAEC,EAAa,aAAEC,GAAiBC,YAAY,CAAC7B,WAEnE,OACE8B,cAAA,OAAKC,UAAS,+CAAAC,OAAiDJ,EAAe,UAAY,YAAaK,SACrGC,eAAA,OAAKH,UAAU,eAAgBL,IAAcO,SAAA,CAC3CH,cAAA,YAAWH,MAET9B,EACEiC,cAAA,KAAAG,SAAG,8CACLL,EACEE,cAAA,KAAAG,SAAG,+BACHC,eAAA,KAAAD,SAAA,CAAG,wDAAqDH,cAAA,SAAK,2DAKzE,E,iBCtCeK,MARf,SAAgBvC,GACd,OACEkC,cAAA,OAAKC,UAAS,kCAAoCE,SAChDH,cAACM,IAAQ,CAACC,KAAMzC,EAAMyC,QAG5B,ECFA,SAASC,IACP,MAAOD,EAAMf,GAAWvB,mBAAS,MAEjC,OACEmC,eAAA,OAAAD,SAAA,CACEH,cAAA,OAAKC,UAAU,yDAAwDE,SACrEH,cAAA,KAAAG,SAAG,yDAGLH,cAACnC,EAAQ,CAAC2B,QAASA,IACnBQ,cAACK,EAAM,CAACE,KAAMA,MAGpB,CAEAE,IAASC,OACPV,cAACW,IAAMC,WAAU,CAAAT,SACfH,cAACQ,EAAI,MAEPK,SAASC,eAAe,Q","file":"static/js/4.7fcd8503.chunk.js","sourcesContent":["import { useCallback, useState } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { decompress } from 'xz'\n\nfunction Savegame(props: any) {\n  const [isAnalyzing, setIsAnalyzing] = useState(false)\n\n  const onDrop = useCallback((acceptedFiles: any) => {\n    acceptedFiles.forEach((file: File) => {\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        const buffer = reader.result\n        if (buffer === null || !(buffer instanceof ArrayBuffer)) return\n\n        setIsAnalyzing(true)\n        const resultPromise = new Promise((resolve, reject) => {\n          /* Small timeout for the GUI to update the \"isAnalyzing\" state. */\n          setTimeout(() => {\n            let res = decompress(new Uint8Array(buffer))\n            props.setData(JSON.parse(res))\n            setIsAnalyzing(false)\n          }, 10);\n        })\n        return resultPromise\n      }\n      reader.readAsArrayBuffer(file)\n    })\n\n  }, [props])\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({onDrop})\n\n  return (\n    <div className={`card border-info container text-center mt-5 ${isDragActive ? \"bg-info\" : \"bg-light\"}`}>\n      <div className=\"card-body\" {...getRootProps()}>\n        <input {...getInputProps()} />\n        {\n          isAnalyzing ?\n            <p>Analyzing ... this might take a while ...</p> :\n          isDragActive ?\n            <p>Drop the savegame here ...</p> :\n            <p>Drag 'n' drop your savegame here, or click to select.<br/>Savegames uploaded here never leave your computer</p>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Savegame;\n","import JSONTree from 'react-json-tree'\n\nfunction Viewer(props: any) {\n  return (\n    <div className={`card border-info container mt-2`}>\n      <JSONTree data={props.data} />\n    </div>\n  )\n}\n\nexport default Viewer;\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Savegame from './Savegame';\nimport Viewer from './Viewer';\n\nfunction Main() {\n  const [data, setData] = useState(null)\n\n  return (\n    <div>\n      <div className=\"card border-info bg-warning container mt-1 text-center\">\n        <p>Savegames have to be made with 12.0-beta1 or later</p>\n      </div>\n\n      <Savegame setData={setData} />\n      <Viewer data={data} />\n    </div>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}