{"version":3,"sources":["Savegame.tsx","Viewer.tsx","App.tsx"],"names":["Savegame","props","useState","isAnalyzing","setIsAnalyzing","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","buffer","result","ArrayBuffer","Promise","resolve","reject","setTimeout","res","decompress","Uint8Array","setData","JSON","parse","readAsArrayBuffer","useDropzone","getRootProps","getInputProps","isDragActive","className","Viewer","data","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAkDeA,MA9Cf,SAAkBC,GAChB,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAASC,uBAAY,SAACC,GAC1BA,EAAcC,SAAQ,SAACC,GACrB,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,QAAU,kBAAMC,QAAQC,IAAI,6BACnCJ,EAAOK,QAAU,kBAAMF,QAAQC,IAAI,4BACnCJ,EAAOM,OAAS,WACd,IAAMC,EAASP,EAAOQ,OACtB,GAAe,OAAXD,GAAqBA,aAAkBE,YAW3C,OATAf,GAAe,GACO,IAAIgB,SAAQ,SAACC,EAASC,GAE1CC,YAAW,WACT,IAAIC,EAAMC,YAAW,IAAIC,WAAWT,IACpChB,EAAM0B,QAAQC,KAAKC,MAAML,IACzBpB,GAAe,KACd,QAIPM,EAAOoB,kBAAkBrB,QAG1B,CAACR,IACJ,EAAsD8B,YAAY,CAAC1B,WAA3D2B,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,aAErC,OACE,qBAAKC,UAAS,sDAAiDD,EAAe,UAAY,YAA1F,SACE,8CAAKC,UAAU,aAAgBH,KAA/B,cACE,qCAAWC,MAET9B,EACE,0EACF+B,EACE,2DACA,sFAAwD,uBAAxD,8D,iBChCGE,MARf,SAAgBnC,GACd,OACE,qBAAKkC,UAAS,kCAAd,SACE,cAAC,IAAD,CAAUE,KAAMpC,EAAMoC,UCA5B,SAASC,IACP,MAAwBpC,mBAAS,MAAjC,mBAAOmC,EAAP,KAAaV,EAAb,KAEA,OACE,gCACE,qBAAKQ,UAAU,yDAAf,SACE,qFAGF,cAAC,EAAD,CAAUR,QAASA,IACnB,cAAC,EAAD,CAAQU,KAAMA,OAKpBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe","file":"static/js/5.baf6a2d5.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport {decompress} from 'xz'\n\nfunction Savegame(props: any) {\n  const [isAnalyzing, setIsAnalyzing] = useState(false)\n\n  const onDrop = useCallback((acceptedFiles) => {\n    acceptedFiles.forEach((file: File) => {\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        const buffer = reader.result\n        if (buffer === null || !(buffer instanceof ArrayBuffer)) return\n\n        setIsAnalyzing(true)\n        const resultPromise = new Promise((resolve, reject) => {\n          /* Small timeout for the GUI to update the \"isAnalyzing\" state. */\n          setTimeout(() => {\n            let res = decompress(new Uint8Array(buffer))\n            props.setData(JSON.parse(res))\n            setIsAnalyzing(false)\n          }, 10);\n        })\n        return resultPromise\n      }\n      reader.readAsArrayBuffer(file)\n    })\n\n  }, [props])\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({onDrop})\n\n  return (\n    <div className={`card border-info container text-center mt-5 ${isDragActive ? \"bg-info\" : \"bg-light\"}`}>\n      <div className=\"card-body\" {...getRootProps()}>\n        <input {...getInputProps()} />\n        {\n          isAnalyzing ?\n            <p>Analyzing ... this might take a while ...</p> :\n          isDragActive ?\n            <p>Drop the savegame here ...</p> :\n            <p>Drag 'n' drop your savegame here, or click to select.<br/>Savegames uploaded here never leave your computer</p>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Savegame;\n","import React from 'react'\nimport JSONTree from 'react-json-tree'\n\nfunction Viewer(props: any) {\n  return (\n    <div className={`card border-info container mt-2`}>\n      <JSONTree data={props.data} />\n    </div>\n  )\n}\n\nexport default Viewer;\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Savegame from './Savegame';\nimport Viewer from './Viewer';\n\nfunction Main() {\n  const [data, setData] = useState(null)\n\n  return (\n    <div>\n      <div className=\"card border-info bg-warning container mt-1 text-center\">\n        <p>Savegames have to be made with 12.0-beta1 or later</p>\n      </div>\n\n      <Savegame setData={setData} />\n      <Viewer data={data} />\n    </div>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}